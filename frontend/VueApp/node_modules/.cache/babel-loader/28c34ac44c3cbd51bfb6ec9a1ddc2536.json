{"remainingRequest":"/home/mint/Desktop/frontend/VueApp/node_modules/babel-loader/lib/index.js!/home/mint/Desktop/frontend/VueApp/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/mint/Desktop/frontend/VueApp/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/mint/Desktop/frontend/VueApp/src/components/Dashboard.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/mint/Desktop/frontend/VueApp/src/components/Dashboard.vue","mtime":1612479508606},{"path":"/home/mint/Desktop/frontend/VueApp/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mint/Desktop/frontend/VueApp/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/mint/Desktop/frontend/VueApp/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mint/Desktop/frontend/VueApp/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuaXRlcmF0b3IiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgSGVhZGVyIGZyb20gJy4vSGVhZGVyLnZ1ZSc7CmltcG9ydCBDcmVhdGVFbnRyeSBmcm9tICcuL0NyZWF0ZUVudHJ5LnZ1ZSc7CmltcG9ydCBFbnRyaWVzIGZyb20gJy4vRW50cmllcy52dWUnOwppbXBvcnQgeyBnZXRBbGxFbnRyaWVzIGFzIF9nZXRBbGxFbnRyaWVzLCBjcmVhdGVFbnRyeSwgcmVtb3ZlRW50cnksIHJlbW92ZUFsbEVudHJpZXMgfSBmcm9tICcuLi9zZXJ2aWNlcy9FbnRyeVNlcnZpY2UnOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ0Rhc2hib2FyZCcsCiAgY29tcG9uZW50czogewogICAgSGVhZGVyOiBIZWFkZXIsCiAgICBDcmVhdGVFbnRyeTogQ3JlYXRlRW50cnksCiAgICBFbnRyaWVzOiBFbnRyaWVzCiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgZW50cmllczogW10sCiAgICAgIG51bWJlck9mRW50cmllczogMAogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGdldEFsbEVudHJpZXM6IGZ1bmN0aW9uIGdldEFsbEVudHJpZXMoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICBfZ2V0QWxsRW50cmllcygpLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgY29uc29sZS5sb2cocmVzcG9uc2UpOwogICAgICAgIF90aGlzLmVudHJpZXMgPSByZXNwb25zZTsKICAgICAgICBfdGhpcy5udW1iZXJPZkVudHJpZXMgPSBfdGhpcy5lbnRyaWVzLmxlbmd0aDsKICAgICAgfSk7CiAgICB9LAogICAgZW50cnlDcmVhdGU6IGZ1bmN0aW9uIGVudHJ5Q3JlYXRlKGRhdGEpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICBjb25zb2xlLmxvZygnZGF0YTo6OicsIGRhdGEpOwogICAgICBkYXRhLmlkID0gdGhpcy5udW1iZXJPZkVudHJpZXMgKyAxOwogICAgICBjcmVhdGVFbnRyeShkYXRhKS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgIGNvbnNvbGUubG9nKHJlc3BvbnNlKTsKCiAgICAgICAgX3RoaXMyLmdldEFsbEVudHJpZXMoKTsKICAgICAgfSk7CiAgICB9LAogICAgcmVtb3ZlOiBmdW5jdGlvbiByZW1vdmUoaWQpIHsKICAgICAgdmFyIF90aGlzMyA9IHRoaXM7CgogICAgICByZW1vdmVFbnRyeShpZCkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICBjb25zb2xlLmxvZyhyZXNwb25zZSk7CgogICAgICAgIF90aGlzMy5nZXRBbGxFbnRyaWVzKCk7CiAgICAgIH0pOwogICAgfSwKICAgIHJlbW92ZUFsbDogZnVuY3Rpb24gcmVtb3ZlQWxsKCkgewogICAgICB2YXIgX3RoaXM0ID0gdGhpczsKCiAgICAgIHJlbW92ZUFsbEVudHJpZXMoKS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgIGNvbnNvbGUubG9nKHJlc3BvbnNlKTsKICAgICAgICBfdGhpczQuZW50cmllcyA9IHJlc3BvbnNlOwoKICAgICAgICBfdGhpczQuZ2V0QWxsRW50cmllcygpOwogICAgICB9KTsKICAgIH0KICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB0aGlzLmdldEFsbEVudHJpZXMoKTsKICB9Cn07"},{"version":3,"sources":["Dashboard.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAwBA,OAAA,MAAA,MAAA,cAAA;AACA,OAAA,WAAA,MAAA,mBAAA;AACA,OAAA,OAAA,MAAA,eAAA;AACA,SAAA,aAAA,IAAA,cAAA,EAAA,WAAA,EAAA,WAAA,EAAA,gBAAA,QAAA,0BAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,WADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,MAAA,EAAA,MADA;AAEA,IAAA,WAAA,EAAA,WAFA;AAGA,IAAA,OAAA,EAAA;AAHA,GAFA;AAOA,EAAA,IAPA,kBAOA;AACA,WAAA;AACA,MAAA,OAAA,EAAA,EADA;AAEA,MAAA,eAAA,EAAA;AAFA,KAAA;AAIA,GAZA;AAaA,EAAA,OAAA,EAAA;AACA,IAAA,aADA,2BACA;AAAA;;AACA,MAAA,cAAA,GAAA,IAAA,CAAA,UAAA,QAAA,EAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,QAAA;AACA,QAAA,KAAA,CAAA,OAAA,GAAA,QAAA;AACA,QAAA,KAAA,CAAA,eAAA,GAAA,KAAA,CAAA,OAAA,CAAA,MAAA;AACA,OAJA;AAKA,KAPA;AAQA,IAAA,WARA,uBAQA,IARA,EAQA;AAAA;;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,SAAA,EAAA,IAAA;AACA,MAAA,IAAA,CAAA,EAAA,GAAA,KAAA,eAAA,GAAA,CAAA;AACA,MAAA,WAAA,CAAA,IAAA,CAAA,CAAA,IAAA,CAAA,UAAA,QAAA,EAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,QAAA;;AACA,QAAA,MAAA,CAAA,aAAA;AACA,OAHA;AAIA,KAfA;AAiBA,IAAA,MAjBA,kBAiBA,EAjBA,EAiBA;AAAA;;AACA,MAAA,WAAA,CAAA,EAAA,CAAA,CAAA,IAAA,CAAA,UAAA,QAAA,EAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,QAAA;;AACA,QAAA,MAAA,CAAA,aAAA;AACA,OAHA;AAIA,KAtBA;AAwBA,IAAA,SAxBA,uBAwBA;AAAA;;AACA,MAAA,gBAAA,GAAA,IAAA,CAAA,UAAA,QAAA,EAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,QAAA;AACA,QAAA,MAAA,CAAA,OAAA,GAAA,QAAA;;AACA,QAAA,MAAA,CAAA,aAAA;AACA,OAJA;AAKA;AA9BA,GAbA;AA6CA,EAAA,OA7CA,qBA6CA;AACA,SAAA,aAAA;AACA;AA/CA,CAAA","sourcesContent":["<template>\n  <div class=\"hello\">\n    <Header />\n    <div class=\"container mrgnbtm\">\n          <div class=\"row\">\n            <div class=\"col-md-8\">\n                <CreateEntry @createEntry=\"entryCreate($event)\" />\n            </div>\n            <div class=\"col-md-8\">\n                <RemoveEntry @removeEntry=\"remove($event)\" />\n            </div>\n            <div class=\"col-md-8\">\n                <RemoveAll @removeAllEntries=\"removeAll($event)\" />\n            </div>\n\n          </div>\n    </div>\n    <div class=\"row mrgnbtm\">\n        <Entries v-if=\"entries.length > 0\" :entries=\"entries\" />\n    </div>\n  </div>\n</template>\n\n<script>\nimport Header from './Header.vue'\nimport CreateEntry from './CreateEntry.vue'\nimport Entries from './Entries.vue'\nimport { getAllEntries, createEntry , removeEntry, removeAllEntries} from '../services/EntryService'\n\nexport default {\n  name: 'Dashboard',\n  components: {\n    Header,\n    CreateEntry,\n    Entries\n  },\n  data() {\n      return {\n          entries: [],\n          numberOfEntries: 0\n      }\n  },\n  methods: {\n    getAllEntries() {\n      getAllEntries().then(response => {\n        console.log(response)\n        this.entries = response;\n        this.numberOfEntries = this.entries.length;\n      })\n    },\n    entryCreate(data) {\n      console.log('data:::', data)\n      data.id = this.numberOfEntries + 1\n      createEntry(data).then(response => {\n        console.log(response);\n        this.getAllEntries();\n      });\n    },\n\n    remove(id) {\n      removeEntry(id).then(response => {\n        console.log(response);\n        this.getAllEntries();\n      });\n    },\n\n    removeAll() {\n      removeAllEntries().then(response => {\n        console.log(response);\n        this.entries=response;\n        this.getAllEntries();\n      });\n    }\n  },\n  mounted () {\n    this.getAllEntries();\n  }\n}\n</script>\n"],"sourceRoot":"src/components"}]}